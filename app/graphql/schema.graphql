interface ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
A valid signed id to be used with file uploads
"""
scalar ActiveStorageSignedId

"""
Autogenerated input type of ArchiveVoicemail
"""
input ArchiveVoicemailInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ArchiveVoicemail
"""
type ArchiveVoicemailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  voicemail: Voicemail
}

"""
Autogenerated input type of AssignPhoneNumber
"""
input AssignPhoneNumberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  phoneNumberId: ID
  userId: ID!
}

"""
Autogenerated return type of AssignPhoneNumber
"""
type AssignPhoneNumberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  user: User
}

interface Call {
  answeredAt: ISO8601DateTime

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  duration: Int!

  """
  A unique identifier for the record
  """
  id: ID!

  """
  Indicates whether the call is between users
  """
  internal: Boolean!
  missed: Boolean!
  originalParticipant: Participant!
  participants: [Participant!]!
  qualityIssue: Boolean!
  recordable: Boolean!
  recorded: Boolean!
  recording: Recording
  sid: String
  status: CallStatus!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  user: User!
  viewed: Boolean!
}

"""
The connection type for Call.
"""
type CallConnection {
  """
  A list of edges.
  """
  edges: [CallEdge]

  """
  A list of nodes.
  """
  nodes: [Call]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type CallEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Call
}

"""
Valid statuses for a call
"""
enum CallStatus {
  BUSY
  CANCELED
  COMPLETED
  FAILED
  INITIATED
  IN_PROGRESS
  NO_ANSWER
  PENDING
}

type Contact implements ActiveRecord {
  calls(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CallConnection!
  company: String
  conversation: Conversation

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  email: String
  firstName: String
  fullName: String
  hiringAuthority: Boolean!

  """
  A unique identifier for the record
  """
  id: ID!

  """
  The way the contact is identified to the user. If the contact
  has a name then identity is the name. If the contact doesn't
  have a name then identity is the phone number.
  """
  identity: String!

  """
  Date and time of the last communication that has been received
  from this contact via incoming calls and incoming messages
  """
  lastContactAt: ISO8601DateTime
  lastName: String
  notes: String
  occupation: String
  phoneNumber: String!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  saved: Boolean!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  voicemails(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VoicemailConnection!
  walterId: Int
}

"""
The connection type for Contact.
"""
type ContactConnection {
  """
  A list of edges.
  """
  edges: [ContactEdge]

  """
  A list of nodes.
  """
  nodes: [Contact]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ContactEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Contact
}

"""
Properties for an Contact
"""
input ContactInput {
  company: String
  email: String
  firstName: String
  hiringAuthority: Boolean
  lastName: String
  notes: String
  occupation: String
  phoneNumber: PhoneNumber!
}

"""
Possible columns to sort contacts by
"""
enum ContactSortByType {
  COMPANY
  LAST_CONTACT
  NAME
}

type Conversation implements ActiveRecord {
  contact: Contact!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  messages(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): MessageConnection!
  mostRecentMessage: Message!
  read: Boolean!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
The connection type for Conversation.
"""
type ConversationConnection {
  """
  A list of edges.
  """
  edges: [ConversationEdge]

  """
  A list of nodes.
  """
  nodes: [Conversation]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ConversationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Conversation
}

type Counts {
  missedCalls: Int!
  newVoicemails: Int!
  unreadConversations: Int!
}

"""
Autogenerated input type of CreateContact
"""
input CreateContactInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contactInput: ContactInput!
}

"""
Autogenerated return type of CreateContact
"""
type CreateContactPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contact: Contact

  """
  Validation error
  """
  errors: [Error!]!
}

"""
Autogenerated input type of CreateGlobalTemplate
"""
input CreateGlobalTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  templateInput: TemplateInput!
}

"""
Autogenerated return type of CreateGlobalTemplate
"""
type CreateGlobalTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  template: Template
}

"""
Autogenerated input type of CreateTemplate
"""
input CreateTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  templateInput: TemplateInput!
}

"""
Autogenerated return type of CreateTemplate
"""
type CreateTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  template: Template
}

"""
Autogenerated input type of CreateTransferRequest
"""
input CreateTransferRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  participantId: ID!
  userId: ID!
}

"""
Autogenerated return type of CreateTransferRequest
"""
type CreateTransferRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  transferRequest: TransferRequest
}

"""
Autogenerated input type of DeleteContact
"""
input DeleteContactInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteContact
"""
type DeleteContactPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

"""
Autogenerated input type of DeleteRecording
"""
input DeleteRecordingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteRecording
"""
type DeleteRecordingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

"""
Autogenerated input type of DeleteTemplate
"""
input DeleteTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteTemplate
"""
type DeleteTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

"""
Autogenerated input type of DeleteVoicemail
"""
input DeleteVoicemailInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteVoicemail
"""
type DeleteVoicemailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

"""
Autogenerated input type of EndCall
"""
input EndCallInput {
  callId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of EndCall
"""
type EndCallPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

"""
Autogenerated input type of EndParticipantCall
"""
input EndParticipantCallInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  participantId: ID!
}

"""
Autogenerated return type of EndParticipantCall
"""
type EndParticipantCallPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  participant: Participant
}

type Error {
  """
  The field the error relates to
  """
  field: String!

  """
  The error message
  """
  message: String!
}

"""
Autogenerated input type of ForwardPhoneNumber
"""
input ForwardPhoneNumberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The id of the phone number to forward
  """
  id: ID!

  """
  The id of the user to forward the number to
  """
  userId: ID!
}

"""
Autogenerated return type of ForwardPhoneNumber
"""
type ForwardPhoneNumberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  phoneNumber: PhoneNumberObject
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type IncomingCall implements Call {
  answeredAt: ISO8601DateTime

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  duration: Int!

  """
  A unique identifier for the record
  """
  id: ID!

  """
  Indicates whether the call is between users
  """
  internal: Boolean!
  missed: Boolean!
  originalParticipant: Participant!
  participants: [Participant!]!
  qualityIssue: Boolean!
  recordable: Boolean!
  recorded: Boolean!
  recording: Recording
  ringGroupCall: RingGroupCall
  sid: String
  status: CallStatus!
  transferRequest: TransferRequest

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  user: User!
  viewed: Boolean!
  voicemail: Voicemail
}

type IncomingMessage implements Message {
  body: String
  conversation: Conversation!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  media: [MessageMedia!]!
  status: MessageStatus!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of MergeCall
"""
input MergeCallInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The ID of the call to move participants from
  """
  fromCallId: ID!

  """
  The ID of the call to move participants to
  """
  toCallId: ID!
}

"""
Autogenerated return type of MergeCall
"""
type MergeCallPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!

  """
  The participants that failed to merge
  """
  failedParticipants: [Participant!]

  """
  The participants that were merged
  """
  participants: [Participant!]
}

interface Message {
  body: String
  conversation: Conversation!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  media: [MessageMedia!]!
  status: MessageStatus!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Message.
"""
type MessageConnection {
  """
  A list of edges.
  """
  edges: [MessageEdge]

  """
  A list of nodes.
  """
  nodes: [Message]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type MessageEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Message
}

interface MessageMedia {
  contentType: String!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  extension: String!
  filename: String!

  """
  A unique identifier for the record
  """
  id: ID!
  location: String! @deprecated(reason: "Renamed to url")
  type: String! @deprecated(reason: "Renamed to contentType")

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  url: String!
}

type MessageMediaFile implements MessageMedia {
  contentType: String!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  extension: String!
  filename: String!

  """
  A unique identifier for the record
  """
  id: ID!
  location: String! @deprecated(reason: "Renamed to url")
  type: String! @deprecated(reason: "Renamed to contentType")

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  url: String!
}

type MessageMediaImage implements MessageMedia {
  contentType: String!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  extension: String!
  filename: String!
  height: String!

  """
  A unique identifier for the record
  """
  id: ID!
  large: MessageMediaImageVariant!
  location: String! @deprecated(reason: "Renamed to url")
  medium: MessageMediaImageVariant!
  thumbnail: MessageMediaImageVariant!
  type: String! @deprecated(reason: "Renamed to contentType")

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  url: String!
  width: String!
}

type MessageMediaImageVariant {
  height: String!
  url: String!
  width: String!
}

"""
The delivery statuses a message can have
"""
enum MessageStatus {
  """
  The message has been successfully delivered.
  """
  DELIVERED

  """
  The message has failed to deliver. Sending of this message can be retried.
  """
  FAILED

  """
  The message has been sent but we have not yet gotten a delivery confirmation
  """
  SENT
}

type Mutation {
  """
  Marks a voicemail to be archived rather than deleted
  """
  archiveVoicemail(input: ArchiveVoicemailInput!): ArchiveVoicemailPayload

  """
  Assigns a phone number to the specifed user
  """
  assignPhoneNumber(input: AssignPhoneNumberInput!): AssignPhoneNumberPayload

  """
  Create a new contact
  """
  createContact(input: CreateContactInput!): CreateContactPayload

  """
  Creates a new global message template
  """
  createGlobalTemplate(input: CreateGlobalTemplateInput!): CreateGlobalTemplatePayload

  """
  Creates a new message template
  """
  createTemplate(input: CreateTemplateInput!): CreateTemplatePayload

  """
  Initiates a transfer request to a user
  """
  createTransferRequest(input: CreateTransferRequestInput!): CreateTransferRequestPayload

  """
  Removes the specified contact from the saved list
  """
  deleteContact(input: DeleteContactInput!): DeleteContactPayload

  """
  Delete a specified recording
  """
  deleteRecording(input: DeleteRecordingInput!): DeleteRecordingPayload

  """
  Deletes the specified template
  """
  deleteTemplate(input: DeleteTemplateInput!): DeleteTemplatePayload

  """
  Deletes the specified voicemail
  """
  deleteVoicemail(input: DeleteVoicemailInput!): DeleteVoicemailPayload

  """
  Ends the specified call
  """
  endCall(input: EndCallInput!): EndCallPayload

  """
  End the participant's call leg
  """
  endParticipantCall(input: EndParticipantCallInput!): EndParticipantCallPayload

  """
  Reassigns the phone number to the specified user and turns on forwarding
  """
  forwardPhoneNumber(input: ForwardPhoneNumberInput!): ForwardPhoneNumberPayload

  """
  Merge participants from one call into another
  """
  mergeCall(input: MergeCallInput!): MergeCallPayload

  """
  Parks a participant on hold for a user
  """
  parkParticipant(input: ParkParticipantInput!): ParkParticipantPayload

  """
  Marks a conversation as read
  """
  readConversation(input: ReadConversationInput!): ReadConversationPayload

  """
  Saves the provided audio as the voicemail greeting message for the ring group
  """
  recordRingGroupVoicemailGreeting(input: RecordRingGroupVoicemailGreetingInput!): RecordRingGroupVoicemailGreetingPayload

  """
  Saves the provided audio as the voicemail greeting message for the current user
  """
  recordVoicemailGreeting(input: RecordVoicemailGreetingInput!): RecordVoicemailGreetingPayload

  """
  Registers a device to receive push notifications
  """
  registerPushNotificationDevice(input: RegisterPushNotificationDeviceInput!): RegisterPushNotificationDevicePayload

  """
  Reconnects the current user to the specified call
  """
  rejoinCall(input: RejoinCallInput!): RejoinCallPayload

  """
  Removes the specified contact from the saved list
  """
  removeContactFromSaved(input: RemoveContactFromSavedInput!): RemoveContactFromSavedPayload @deprecated(reason: "Use deleteContact mutation instead.")

  """
  Retries a failed message
  """
  retryFailedMessage(input: RetryFailedMessageInput!): RetryFailedMessagePayload

  """
  Sends a message to the specified number
  """
  sendMessage(input: SendMessageInput!): SendMessagePayload

  """
  Sends the participant to the voicemail of the specified user
  """
  sendParticipantToVoicemail(input: SendParticipantToVoicemailInput!): SendParticipantToVoicemailPayload

  """
  Sets the users call forwarding number
  """
  setCallForwardingNumber(input: SetCallForwardingNumberInput!): SetCallForwardingNumberPayload

  """
  Sets the users caller id to the provided phone number
  """
  setCallerIdNumber(input: SetCallerIdNumberInput!): SetCallerIdNumberPayload

  """
  Sets the users setting for receiving voicemails by email
  """
  setEmailVoicemails(input: SetEmailVoicemailsInput!): SetEmailVoicemailsPayload

  """
  Enables or disables call forwarding for a user
  """
  toggleCallForwarding(input: ToggleCallForwardingInput!): ToggleCallForwardingPayload

  """
  Toggles whether a user reported call quality issues
  """
  toggleCallQualityIssue(input: ToggleCallQualityIssueInput!): ToggleCallQualityIssuePayload

  """
  Toggles whether a call is recorded
  """
  toggleCallRecorded(input: ToggleCallRecordedInput!): ToggleCallRecordedPayload

  """
  Places and removes a participant from hold
  """
  toggleParticipantHold(input: ToggleParticipantHoldInput!): ToggleParticipantHoldPayload

  """
  Mute and unmutes a participant
  """
  toggleParticipantMuted(input: ToggleParticipantMutedInput!): ToggleParticipantMutedPayload

  """
  Changes the availability setting for the current user for the specified membership
  """
  toggleRingGroupMemberAvailability(input: ToggleRingGroupMemberAvailabilityInput!): ToggleRingGroupMemberAvailabilityPayload

  """
  Places the participant into a new call to a specified user
  """
  transferParticipant(input: TransferParticipantInput!): TransferParticipantPayload

  """
  Provides a response to a transfer request
  """
  transferRequestResponse(input: TransferRequestResponseInput!): TransferRequestResponsePayload

  """
  Updates the availability settings for the specified user
  """
  updateAvailability(input: UpdateAvailabilityInput!): UpdateAvailabilityPayload

  """
  Updates the specified contact
  """
  updateContact(input: UpdateContactInput!): UpdateContactPayload

  """
  Updates the specified template
  """
  updateTemplate(input: UpdateTemplateInput!): UpdateTemplatePayload

  """
  Marks a voicemail as viewed
  """
  viewVoicemail(input: ViewVoicemailInput!): ViewVoicemailPayload

  """
  Marks all calls as viewed
  """
  viewedCalls(input: ViewedCallsInput!): ViewedCallsPayload
}

type OutgoingCall implements Call {
  answeredAt: ISO8601DateTime

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  duration: Int!

  """
  A unique identifier for the record
  """
  id: ID!

  """
  Indicates whether the call is between users
  """
  internal: Boolean!
  missed: Boolean!
  originalParticipant: Participant!
  participants: [Participant!]!
  qualityIssue: Boolean!
  recordable: Boolean!
  recorded: Boolean!
  recording: Recording
  sid: String
  status: CallStatus!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  user: User!
  viewed: Boolean!
}

type OutgoingMessage implements Message {
  body: String
  conversation: Conversation!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  media: [MessageMedia!]!
  status: MessageStatus!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

"""
Autogenerated input type of ParkParticipant
"""
input ParkParticipantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The ID of the participant to transfer
  """
  participantId: ID!

  """
  The ID of the user to transfer the participant to
  """
  userId: ID!
}

"""
Autogenerated return type of ParkParticipant
"""
type ParkParticipantPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

type Participant implements ActiveRecord {
  call: Call!
  contact: Contact!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  muted: Boolean!
  onHold: Boolean!
  sid: String
  status: ParticipantStatus!
  transferRequest: TransferRequest

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
Valid statuses for a participant
"""
enum ParticipantStatus {
  COMPLETED
  INITIATED
  IN_PROGRESS
}

"""
Properties for an patching the availability of a user
"""
input PatchAvailabilityInput {
  availabilityNote: String
  available: Boolean
}

"""
Properties for an patching a Contact
"""
input PatchContactInput {
  company: String
  email: String
  firstName: String
  hiringAuthority: Boolean
  lastName: String
  notes: String
  occupation: String
  phoneNumber: PhoneNumber
}

"""
A string representation of the phone number
"""
scalar PhoneNumber

type PhoneNumberObject implements ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  forwarding: Boolean!

  """
  A unique identifier for the record
  """
  id: ID!
  phoneNumber: String!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  user: User
}

type Query {
  """
  Gets the specified call
  """
  call(
    """
    Call ID or SID
    """
    identifier: String!
  ): Call

  """
  Searches for any past call history with a specific phone number
  """
  callHistory(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    A phone number for a existing contact
    """
    phoneNumber: PhoneNumber!
  ): CallConnection

  """
  Provides a token with incoming and outgoing call capability
  """
  callToken: String!

  """
  Gets all calls for the current user
  """
  calls(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filter by missed calls
    """
    missed: Boolean
  ): CallConnection!

  """
  Gets the specified contact
  """
  contact(id: ID!): Contact

  """
  Gets all contacts for the current user
  """
  contacts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    The column to sort the results by
    """
    sortBy: ContactSortByType = NAME

    """
    The direction to sort the results
    """
    sortOrder: SortOrderType = ASC
  ): ContactConnection!

  """
  Gets the specified conversation
  """
  conversation(id: ID!): Conversation

  """
  Searches for any past conversation history with a specific phone number
  """
  conversationHistory(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    A phone number for a existing contact
    """
    phoneNumber: PhoneNumber!
  ): ConversationConnection

  """
  Gets all conversations for the current user
  """
  conversations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ConversationConnection!

  """
  Gets counts for unread conversations, new voicemails, and missed calls
  """
  counts: Counts

  """
  Gets all the users with a number for a directory list
  """
  directory(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!

  """
  Gets all the global templates
  """
  globalTemplates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TemplateConnection!

  """
  Searches for a global template based on a tag
  """
  globalTemplatesSearch(tag: String!): [Template!]

  """
  Returns the currently logged in user
  """
  me: User

  """
  Gets all ongoing calls for the current user
  """
  ongoingCalls: [Call!]!

  """
  Gets the specified recording
  """
  recording(id: ID!): Recording

  """
  Gets all recordings for the current user
  """
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!

  """
  Get the specified ring group
  """
  ringGroup(id: ID!): RingGroup!

  """
  Get the specified ring group call
  """
  ringGroupCall(id: ID!): RingGroupCall!

  """
  Get all ring group calls for the specified ring group
  """
  ringGroupCalls(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    ringGroupId: ID!
  ): RingGroupCallConnection!

  """
  Searches contacts using the provided query
  """
  searchContacts(query: String!): [Contact!]

  """
  Searches the directory for users with numbers using the provided query
  """
  searchDirectory(query: String!): [User!]

  """
  Searches messages using the provided query
  """
  searchMessages(query: String!): [Message!]

  """
  Gets the specified template
  """
  template(id: ID!): Template

  """
  Gets all the templates for a current user
  """
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TemplateConnection!

  """
  Searches for a template based on a tag
  """
  templatesSearch(tag: String!): [Template!]

  """
  Gets all unread conversations for the current user
  """
  unreadConversations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ConversationConnection! @deprecated(reason: "Unread conversations are inline with other conversations.")

  """
  Gets contacts for the current user that have not yet been saved with a name
  """
  unsavedContacts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ContactConnection! @deprecated(reason: "Unsaved contacts will be accessed via their conversation.")

  """
  Gets the specified user
  """
  user(id: ID!): User

  """
  Gets the specified voicemail
  """
  voicemail(id: ID!): Voicemail

  """
  Gets all voicemails for the current user
  """
  voicemails(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Filter by archived
    """
    archived: Boolean

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VoicemailConnection!
}

"""
Autogenerated input type of ReadConversation
"""
input ReadConversationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ReadConversation
"""
type ReadConversationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  conversation: Conversation

  """
  Validation error
  """
  errors: [Error!]!
}

"""
Autogenerated input type of RecordRingGroupVoicemailGreeting
"""
input RecordRingGroupVoicemailGreetingInput {
  """
  The signed id of the audio file
  """
  audio: ActiveStorageSignedId!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ringGroupId: ID!
}

"""
Autogenerated return type of RecordRingGroupVoicemailGreeting
"""
type RecordRingGroupVoicemailGreetingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  ringGroup: RingGroup
}

"""
Autogenerated input type of RecordVoicemailGreeting
"""
input RecordVoicemailGreetingInput {
  """
  The signed id of the audio file
  """
  audio: ActiveStorageSignedId!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of RecordVoicemailGreeting
"""
type RecordVoicemailGreetingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  user: User
}

type Recording implements ActiveRecord {
  call: Call!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  duration: Int!

  """
  For @client directive usage on frontend
  """
  hidden: Boolean!

  """
  A unique identifier for the record
  """
  id: ID!
  sid: String!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  url: String!
}

"""
The connection type for Recording.
"""
type RecordingConnection {
  """
  A list of edges.
  """
  edges: [RecordingEdge]

  """
  A list of nodes.
  """
  nodes: [Recording]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RecordingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Recording
}

"""
Autogenerated input type of RegisterPushNotificationDevice
"""
input RegisterPushNotificationDeviceInput {
  address: String!
  bindingType: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of RegisterPushNotificationDevice
"""
type RegisterPushNotificationDevicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

"""
Autogenerated input type of RejoinCall
"""
input RejoinCallInput {
  callId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of RejoinCall
"""
type RejoinCallPayload {
  call: Call

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
}

"""
Autogenerated input type of RemoveContactFromSaved
"""
input RemoveContactFromSavedInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RemoveContactFromSaved
"""
type RemoveContactFromSavedPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contact: Contact

  """
  Validation error
  """
  errors: [Error!]!
}

"""
Autogenerated input type of RetryFailedMessage
"""
input RetryFailedMessageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RetryFailedMessage
"""
type RetryFailedMessagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  conversation: Conversation

  """
  Validation error
  """
  errors: [Error!]!
  message: Message
}

type RingGroup implements ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  name: String!
  phoneNumber: String!
  ringGroupCalls(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RingGroupCallConnection!
  ringGroupMembers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RingGroupMemberConnection!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!

  """
  The location of the recorded greeting message for this ring group
  """
  voicemailGreetingUrl: String
  voicemails(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VoicemailConnection!
}

type RingGroupCall implements ActiveRecord {
  answeredCall: IncomingCall

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  fromPhoneNumber: String!
  fromSid: String!

  """
  A unique identifier for the record
  """
  id: ID!
  missed: Boolean!
  ringGroup: RingGroup!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  voicemail: Voicemail
}

"""
The connection type for RingGroupCall.
"""
type RingGroupCallConnection {
  """
  A list of edges.
  """
  edges: [RingGroupCallEdge]

  """
  A list of nodes.
  """
  nodes: [RingGroupCall]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RingGroupCallEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: RingGroupCall
}

type RingGroupMember implements ActiveRecord {
  available: Boolean!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  ringGroup: RingGroup!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
The connection type for RingGroupMember.
"""
type RingGroupMemberConnection {
  """
  A list of edges.
  """
  edges: [RingGroupMemberEdge]

  """
  A list of nodes.
  """
  nodes: [RingGroupMember]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RingGroupMemberEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: RingGroupMember
}

"""
Autogenerated input type of SendMessage
"""
input SendMessageInput {
  body: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  media: [ActiveStorageSignedId!] = []
  to: PhoneNumber!
}

"""
Autogenerated return type of SendMessage
"""
type SendMessagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  conversation: Conversation

  """
  Validation error
  """
  errors: [Error!]!
  message: Message
}

"""
Autogenerated input type of SendParticipantToVoicemail
"""
input SendParticipantToVoicemailInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  participantId: ID!
  userId: ID!
}

"""
Autogenerated return type of SendParticipantToVoicemail
"""
type SendParticipantToVoicemailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

"""
Autogenerated input type of SetCallForwardingNumber
"""
input SetCallForwardingNumberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  number: PhoneNumber!
}

"""
Autogenerated return type of SetCallForwardingNumber
"""
type SetCallForwardingNumberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  user: User
}

"""
Autogenerated input type of SetCallerIdNumber
"""
input SetCallerIdNumberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  phoneNumber: PhoneNumber!
  userId: ID!
}

"""
Autogenerated return type of SetCallerIdNumber
"""
type SetCallerIdNumberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  user: User
}

"""
Autogenerated input type of SetEmailVoicemails
"""
input SetEmailVoicemailsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  emailVoicemails: Boolean!
}

"""
Autogenerated return type of SetEmailVoicemails
"""
type SetEmailVoicemailsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  user: User
}

"""
The direction to sort results
"""
enum SortOrderType {
  ASC
  DESC
}

type Subscription {
  counts: Counts!
  messageReceived(conversationId: ID): Message!
  messageSent(conversationId: ID): Message!
  messageStatusChanged(messageId: ID!): Message!

  """
  The state of an ongoing call was changed
  """
  ongoingCall(userId: ID): Call!

  """
  The status of a participant changed
  """
  participantStatusChanged(participantId: ID!): Participant!

  """
  The availability of a member for the specified ring group changed
  """
  ringGroupMemberAvailability(ringGroupId: ID): RingGroupMember!
  transferRequest: TransferRequest!
  userAvailability: User!
}

type Template implements ActiveRecord {
  body: String!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  global: Boolean!

  """
  A unique identifier for the record
  """
  id: ID!
  tags: [String!]!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Template.
"""
type TemplateConnection {
  """
  A list of edges.
  """
  edges: [TemplateEdge]

  """
  A list of nodes.
  """
  nodes: [Template]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type TemplateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Template
}

"""
A message template
"""
input TemplateInput {
  body: String!
  tags: [String!]!
}

"""
Autogenerated input type of ToggleCallForwarding
"""
input ToggleCallForwardingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ToggleCallForwarding
"""
type ToggleCallForwardingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  user: User
}

"""
Autogenerated input type of ToggleCallQualityIssue
"""
input ToggleCallQualityIssueInput {
  callId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ToggleCallQualityIssue
"""
type ToggleCallQualityIssuePayload {
  call: Call

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
}

"""
Autogenerated input type of ToggleCallRecorded
"""
input ToggleCallRecordedInput {
  callId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ToggleCallRecorded
"""
type ToggleCallRecordedPayload {
  call: Call

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
}

"""
Autogenerated input type of ToggleParticipantHold
"""
input ToggleParticipantHoldInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  participantId: ID!
}

"""
Autogenerated return type of ToggleParticipantHold
"""
type ToggleParticipantHoldPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  participant: Participant
}

"""
Autogenerated input type of ToggleParticipantMuted
"""
input ToggleParticipantMutedInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  participantId: ID!
}

"""
Autogenerated return type of ToggleParticipantMuted
"""
type ToggleParticipantMutedPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  participant: Participant
}

"""
Autogenerated input type of ToggleRingGroupMemberAvailability
"""
input ToggleRingGroupMemberAvailabilityInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  memberId: ID!
}

"""
Autogenerated return type of ToggleRingGroupMemberAvailability
"""
type ToggleRingGroupMemberAvailabilityPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  ringGroupMember: RingGroupMember
}

"""
Autogenerated input type of TransferParticipant
"""
input TransferParticipantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  participantId: ID!
  userId: ID!
}

"""
Autogenerated return type of TransferParticipant
"""
type TransferParticipantPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  success: Boolean!
}

type TransferRequest implements ActiveRecord {
  contact: Contact!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!
  participant: Participant!
  receiver: User!
  response: String!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of TransferRequestResponse
"""
input TransferRequestResponseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The ID of the Transfer Request
  """
  id: ID!
  response: String!
}

"""
Autogenerated return type of TransferRequestResponse
"""
type TransferRequestResponsePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  transferRequest: TransferRequest
}

"""
Autogenerated input type of UpdateAvailability
"""
input UpdateAvailabilityInput {
  availabilityInput: PatchAvailabilityInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of UpdateAvailability
"""
type UpdateAvailabilityPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  user: User!
}

"""
Autogenerated input type of UpdateContact
"""
input UpdateContactInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contactInput: PatchContactInput!
  id: ID!
}

"""
Autogenerated return type of UpdateContact
"""
type UpdateContactPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contact: Contact

  """
  Validation error
  """
  errors: [Error!]!
}

"""
Autogenerated input type of UpdateTemplate
"""
input UpdateTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  templateInput: TemplateInput!
}

"""
Autogenerated return type of UpdateTemplate
"""
type UpdateTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  template: Template
}

type User implements ActiveRecord {
  admin: Boolean!
  availabilityNote: String
  available: Boolean!
  callForwarding: Boolean!
  callForwardingNumber: String
  callerIdNumber: String
  calls(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CallConnection

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  email: String!
  emailVoicemails: Boolean!
  firstName: String!

  """
  A unique identifier for the record
  """
  id: ID!
  lastName: String!
  ongoingCalls: [Call!]!
  phoneNumber: String!
  ringGroupMemberships: [RingGroupMember!]!

  """
  A feature flag that indicates whether the user should be
  able to see calling related features.
  """
  seeCalling: Boolean!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!

  """
  The location of the recorded greeting message for this user
  """
  voicemailGreetingUrl: String
  walterId: ID
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]

  """
  A list of nodes.
  """
  nodes: [User]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}

"""
Autogenerated input type of ViewVoicemail
"""
input ViewVoicemailInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ViewVoicemail
"""
type ViewVoicemailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Validation error
  """
  errors: [Error!]!
  voicemail: Voicemail
}

"""
Autogenerated input type of ViewedCalls
"""
input ViewedCallsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contactId: ID
}

"""
Autogenerated return type of ViewedCalls
"""
type ViewedCallsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  success: Boolean
}

type Voicemail implements ActiveRecord {
  archived: Boolean!
  call: Voicemailable!

  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  expiration: ISO8601DateTime

  """
  For @client directive usage on frontend
  """
  hidden: Boolean!

  """
  A unique identifier for the record
  """
  id: ID!
  transcription: String @deprecated(reason: "Voicemail transcriptions have been removed.")

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  url: String!
  viewed: Boolean!
}

"""
The connection type for Voicemail.
"""
type VoicemailConnection {
  """
  A list of edges.
  """
  edges: [VoicemailEdge]

  """
  A list of nodes.
  """
  nodes: [Voicemail]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type VoicemailEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Voicemail
}

"""
Objects which may have a voicemail
"""
union Voicemailable = IncomingCall | RingGroupCall